Terminals 9
 0      (EOF)
 1      (Error)
 2      Whitespace
 3      '('
 4      ')'
 5      '*'
 6      '+'
 7      const
 8      id
NT 4
9       <E>
10      <F>
11      <T>
12      <TE>
Rules 8
0       <E> ::= <E> '+' <T>
1       <E> ::= <T>
2       <T> ::= <T> '*' <F>
3       <T> ::= <F>
4       <F> ::= '(' <E> ')'
5       <F> ::= <TE>
6       <TE> ::= id
7       <TE> ::= const
DFA States
State 0
        Goto 1       &09 .. &0D, &20, &85, &A0, &1680, &180E, &2000 .. &200A, &2026, &2028, &2029, &202F, &205F, &3000
        Goto 2       (
        Goto 3       )
        Goto 4       *
        Goto 5       +
        Goto 6       0123456789
        Goto 7       AEIOUaeiou
State 1
        Goto 1       &09 .. &0D, &20, &85, &A0, &1680, &180E, &2000 .. &200A, &2026, &2028, &2029, &202F, &205F, &3000
        Accept Whitespace
State 2
        Accept '('
State 3
        Accept ')'
State 4
        Accept '*'
State 5
        Accept '+'
State 6
        Goto 6       0123456789
        Accept const
State 7
        Goto 7       AEIOUaeiou
        Accept id
LALR States 14
State 0
        <S'> ::= _ <E> (EOF)         <S'> ::= ^ <E> (EOF)
        <E> ::= _ <E> '+' <T>        <E> ::= ^ <E> '+' <T>
        <E> ::= _ <T>                <E> ::= ^ <T>
        <T> ::= _ <T> '*' <F>        <T> ::= ^ <T> '*' <F>
        <T> ::= _ <F>                <T> ::= ^ <F>
        <F> ::= _ '(' <E> ')'        <F> ::= ^ '(' <E> ')'
        <F> ::= _ <TE>               <F> ::= ^ <TE>
        <TE> ::= _ id                <TE> ::= ^ id
        <TE> ::= _ const             <TE> ::= ^ const
tb
        '(' s 1
        const s 2
        id s 3
        <E> g 4
        <F> g 5
        <T> g 6
        <TE> g 7
State 1
        Prior States: 0, 1, 9, 10
	<F> ::= '(' _ <E> ')'        <F> ::= '(' ^ <E> ')'
        <E> ::= _ <E> '+' <T>        <E> ::= ^ <E> '+' <T>
        <E> ::= _ <T>                <E> ::= ^ <T>
        <T> ::= _ <T> '*' <F>        <T> ::= ^ <T> '*' <F>
        <T> ::= _ <F>                <T> ::= ^ <F>
        <F> ::= _ '(' <E> ')'        <F> ::= ^ '(' <E> ')'
        <F> ::= _ <TE>               <F> ::= ^ <TE>
        <TE> ::= _ id                <TE> ::= ^ id
        <TE> ::= _ const             <TE> ::= ^ const
tb
   	'(' s 1
        const s 2
        id s 3
        <E> g 8
        <F> g 5
        <T> g 6
        <TE> g 7
State 2
        Prior States: 0, 1, 9, 10
        <TE> ::= const _             <TE> ::= const ^
tb
        (EOF) r 7
        ')' r 7
        '*' r 7
        '+' r 7
State 3
        Prior States: 0, 1, 9, 10
        <TE> ::= id _                <TE> ::= id ^
tb
        (EOF) r 6
        ')' r 6
        '*' r 6
        '+' r 6
State 4
        Prior States: 0
        <S'> ::= <E> _ (EOF)         <S'> ::= <E> ^ (EOF)
        <E> ::= <E> _ '+' <T>        <E> ::= <E> ^ '+' <T>
tb
        (EOF) a
        '+' s 9
State 5
        Prior States: 0, 1, 9
        <T> ::= <F> _                <T> ::= <F> ^
tb
        (EOF) r 3
        ')' r 3
        '*' r 3
        '+' r 3
State 6
        Prior States: 0, 1
        <E> ::= <T> _                <E> ::= <T> ^
        <T> ::= <T> _ '*' <F>        <T> ::= <T> ^ '*' <F>
tb
        '*' s 10
        (EOF) r 1
        ')' r 1
        '+' r 1
State 7
        Prior States: 0, 1, 9, 10
        <F> ::= <TE> _               <F> ::= <TE> ^
tb
        (EOF) r 5
        ')' r 5
        '*' r 5
        '+' r 5
State 8
        Prior States: 1
        <F> ::= '(' <E> _ ')'        <F> ::= '(' <E> ^ ')'
        <E> ::= <E> _ '+' <T>        <E> ::= <E> ^ '+' <T>
tb
        ')' s 11
        '+' s 9
State 9
        Prior States: 4, 8
        <E> ::= <E> '+' _ <T>        <E> ::= <E> '+' ^ <T>
        <T> ::= _ <T> '*' <F>        <T> ::= ^ <T> '*' <F>
        <T> ::= _ <F>                <T> ::= ^ <F>
        <F> ::= _ '(' <E> ')'        <F> ::= ^ '(' <E> ')'
        <F> ::= _ <TE>               <F> ::= ^ <TE>
        <TE> ::= _ id                <TE> ::= ^ id
        <TE> ::= _ const             <TE> ::= ^ const
tb
        '(' s 1
        const s 2
        id s 3
        <F> g 5
        <T> g 12
        <TE> g 7
State 10
        Prior States: 6, 12
        <T> ::= <T> '*' _ <F>        <T> ::= <T> '*' ^ <F>
        <F> ::= _ '(' <E> ')'        <F> ::= ^ '(' <E> ')'
        <F> ::= _ <TE>               <F> ::= ^ <TE>
        <TE> ::= _ id                <TE> ::= ^ id
        <TE> ::= _ const             <TE> ::= ^ const
tb
        '(' s 1
        const s 2
        id s 3
        <F> g 13
        <TE> g 7
State 11
        Prior States: 8
        <F> ::= '(' <E> ')' _        <F> ::= '(' <E> ')' ^
tb
        (EOF) r 4
        ')' r 4
        '*' r 4
        '+' r 4


State 12
        Prior States: 9
        <E> ::= <E> '+' <T> _        <E> ::= <E> '+' <T> ^
        <T> ::= <T> _ '*' <F>        <T> ::= <T> ^ '*' <F>
tb
        '*' s 10
        (EOF) r 0
        ')' r 0
        '+' r 0
State 13
        Prior States: 10
        <T> ::= <T> '*' <F> _        <T> ::= <T> '*' <F> ^
tb
        (EOF) r 2
        ')' r 2
        '*' r 2
        '+' r 2